{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "sshKeyData": {
      "type": "string",
      "metadata": {
        "description": "SSH rsa public key file as a string."
      }
    },
    "AADObjectID": {
      "type": "string",
      "metadata": {
        "description": "Object ID of AAD app which has permissions to KeyVault. azure ad sp show --search appName"
      }
    },
    "tenantId": {
      "type": "string",
      "defaultValue": null,
      "metadata": {
        "description": "Specifies the Azure Active Directory tenant ID that should be used for authenticating requests to the key vault. The ID must be specified as a GUID."
      }
    },
    "dockerInstanceCount": {
      "type": "int",
      "defaultValue": 2,
      "metadata": {
        "description": "The number of Docker hosts to deploy"
      }
    }
  },
  "variables": {
    "location": "North Central US",
    "vnetCidrBlock": "10.0.0.0/16",
    "subnetPrivateCidrBlock": "10.0.16.0/20",
    "subnetPublicCidrBlock": "10.0.128.0/20",
    "storageAccountType": "Standard_LRS",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "ubuntuOSVersion": "14.04.2-LTS"
  },
  "resources": [
    {
      "name": "podVNET",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2015-05-01-preview",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('vnetCidrBlock')]"
          ]
        },
        "subnets": [
          {
            "name": "privateSubnet",
            "properties": {
              "addressPrefix": "[variables('subnetPrivateCidrBlock')]"
            }
          },
          {
            "name": "publicSubnet",
            "properties": {
              "addressPrefix": "[variables('subnetPublicCidrBlock')]"
            }
          }
        ]
      }
    },
    {
      "name": "podSA",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2015-05-01-preview",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "name": "podKeyVault",
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2015-06-01",
      "location": "[variables('location')]",
      "properties": {
        "enabledForDeployment": true,
        "enabledForDiskEncryption": true,
        "tenantId": "[parameters('tenantId')]",
        "accessPolicies": [ {
          "tenantId": "[parameters('tenantId')]",
          "objectID": "[parameters('AADObjectID')]",
          "permissions": {
            "keys": ["all"],
            "secrets": ["all"]
          }
        } ],
        "sku": {
          "name": "standard",
          "family": "A"
        }
      }
    },    
    {
      "name": "bastionPublicIP",
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2015-05-01-preview",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "bastion"
        }
      }
    },
    {
      "name": "bastionNic",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2015-05-01-preview",
      "location": "[variables('location')]",
      "dependsOn": [
        "Microsoft.Network/publicIPAddresses/bastionPublicIP",
        "Microsoft.Network/virtualNetworks/podVNET"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'bastionPublicIP')]"
              },
              "subnet": {
                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', 'podVNET'),'/subnets/privateSubnet')]"
              }
            }
          }
        ]
      }
    },
    {
      "name": "bastion",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "dependsOn": [
        "Microsoft.Storage/storageAccounts/podSA",
        "Microsoft.Network/networkInterfaces/bastionNic"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_D1_v2"
        },
        "osProfile": {
          "computername": "bastion",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "True",
            "ssh": {
              "publicKeys": [
                {
                  "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                  "keyData": "[parameters('sshKeyData')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('ubuntuOSVersion')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://podSA.blob.core.windows.net/vhds/bastionRoot.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'bastionNic')]"
            }
          ]
        }
      }
    },
    {
      "name": "dockerHostSS",
      "type": "Microsoft.Compute/VirtualMachineScaleSets",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard_D3_v2",
        "tier": "Standard",
        "capacity": "[parameters('dockerInstanceCount')]"
      },
      "properties": {
        "upgradePolicy": {
          "mode": "Automatic"
        },
        "virtualMachineProfile": {
          "osProfile": {
            "computerNamePrefix": "docker",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]",
            "linuxConfiguration": {
              "disablePasswordAuthentication": "True",
              "ssh": {
                "publicKeys": [ {
                  "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                  "keyData": "[parameters('sshKeyData')]"
                } ]
              }
            }
          },
          "storageProfile": {
            "imageReference": {
              "publisher": "[variables('imagePublisher')]",
              "offer": "[variables('imageOffer')]",
              "sku": "[variables('ubuntuOSVersion')]",
              "version": "latest"
            },
            "osDisk": {
              "name": "dockerOSDisk",
              "vhdContainers": [
                "http://podSA.blob.core.windows.net/vhds"
              ],
              "caching": "ReadWrite",
              "createOption": "FromImage"
            }
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [ {
              "name": "dockerNic",
              "properties": {
                "primary":"true",
                "ipConfigurations": [ {
                  "name": "dockerIPconfig",
                  "properties":{
                    "subnet": {
                      "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', 'podVNET'),'/subnets/privateSubnet')]"
                    }
                  }
                } ]
              }
            } ]
          },
          "extensionProfile": {
            "extensions": [ { 
              "name": "chefDeployment",
              "properties": {
                "publisher": "Microsoft.OSTCExtensions",
                "type": "CustomScriptForLinux",
                "typeHandlerVersion": "1.2",
                "autoUpgradeMinorVersion": true,
                "settings": {
                  "fileUris": [
                    "https://raw.githubusercontent.com/catalyzeio/arm-shadow-pod/master/chefDeploy.sh"
                  ],
                  "commandToExecute": "sh chefDeploy.sh"
                }
              }
            } ] 
          }
        }
      }
    }
  ]
}
